#/usr/bin/bash

# Secure Messaging Menu Script 
# Written by John Shearing with much help from the open source community.

# This is a simple GUI for gpg secure messaging between PrivateKeyVaults or other Linux airgapped devices.

while true; 
do

clear;

# Ask user to choose a task.
choice=$(zenity --list \
--title="PrivateKeyVault Secure Messaging Services" \
--text="Select a task from the menu" \
--width 1000 \
--height 1000 \
--hide-column=2 \
--column "Num" --column "Task" --column "Description" \
"1" "mew" "Launch MyEtherWallet" \
"2" "strtfm" "Manage files" \
"3" "strtlfpd" "Read or write a message" \
"4" "ncrypt" "Encrypt a text file" \
"5" "qrflash" "Export Text File: Send QR-Code parade to screen" \
"6" "recvid" "Import Text File: Read QR_Coded video into camera and extract the text" \
"7" "dcrypt" "Decrypt a text file" \
"8" "qrvid2txt" "Extract text from an MP4 video file containing QR-Codes" \
"9" "fingerprint" "Show fingerprint for public keys" \
"10" "list-keys" "Display info about public keys on your key-ring" \
"11" "list-secret-keys" "Display info about secret keys on your key-ring" \
"12" "txt2rings" "Import a public or private key from a text file" \
"13" "pub2txt" "Export a public key to a text file" \
"14" "priv2txt" "Export a private key to a text file" \
"15" "gen-key" "Generate a Public / Private key pair" \
"16" "delpub" "Delete a public key" \
"17" "delprv" "Delete a private key" \
"18" "Exit" "Exit the menu" \
2>/dev/null);

# if user cancels, exit
if [ $? == 1 ] || [ $choice == 0]; then exit; fi

clear;


# Execute the chosen operation.
if [[ $choice = 1 ]]; then
mew
elif [[ $choice = 2 ]]; then
strtfm
elif [[ $choice = 3 ]]; then
strtlfpd
elif [[ $choice = 4 ]]; then
ncrypt 
elif [[ $choice = 5 ]]; then
qrflash
elif [[ $choice = 6 ]]; then
recvid
elif [[ $choice = 7 ]]; then
dcrypt
elif [[ $choice = 8 ]]; then
qrvid2txt
elif [[ $choice = 9 ]]; then
fingerprint
elif [[ $choice = 10 ]]; then
gpg --list-keys
elif [[ $choice = 11 ]]; then
gpg --list-secret-keys
elif [[ $choice = 12 ]]; then
txt2rings
elif [[ $choice = 13 ]]; then
pub2txt
elif [[ $choice = 14 ]]; then
priv2txt
elif [[ $choice = 15 ]]; then
gpg --gen-key
elif [[ $choice = 16 ]]; then
delpub
elif [[ $choice = 17 ]]; then
delprv
elif [[ $choice = 18 ]]; then
exit
fi

done

